{"version":3,"sources":["components/HomePage/HomePage.tsx","components/NavigationLink/NavigationLink.tsx","components/PageNotFound/PageNotFound.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTableRowData/PeopleTableRowData.tsx","components/PeopleTable/PeopleTable.tsx","components/PeopleLoader/PeopleLoader.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NavigationLink","memo","to","title","isActive","classNames","PageNotFound","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeopleTableRowData","born","died","fatherName","motherName","father","mother","PeopleTable","people","personSlug","useParams","map","findParent","parentName","find","parent","PeopleLoader","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","loadPeople","useCallback","peopleFromServer","useEffect","preparedPeople","useMemo","length","PeoplePage","App","role","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4cc11403.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport { FC, memo } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  title: string;\n}\n\nexport const NavigationLink: FC<Props> = memo(({ to, title }) => {\n  return (\n    <NavLink\n      to={to}\n      className={\n        ({ isActive }) => classNames(\n          'navbar-item',\n          { 'has-background-grey-lighter': isActive },\n        )\n      }\n    >\n      {title}\n    </NavLink>\n  );\n});\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const {\n    slug,\n    sex,\n    name,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name || '-'}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PeopleTableRowData: FC<Props> = ({ person }) => {\n  const {\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    father,\n    mother,\n  } = person;\n\n  return (\n    <>\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (<PersonLink person={mother} />)\n          : (motherName || '-')}\n\n      </td>\n      <td>\n        {father\n          ? (<PersonLink person={father} />)\n          : (fatherName || '-')}\n      </td>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types/Person';\nimport { PeopleTableRowData } from '../PeopleTableRowData';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': personSlug === person.slug,\n            })}\n          >\n            <PeopleTableRowData\n              person={person}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nconst findParent = (\n  people: Person[],\n  parentName: string | null,\n): Person | undefined => {\n  return people.find((parent) => parent.name === parentName);\n};\n\nexport const PeopleLoader = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const loadPeople = useCallback(async () => {\n    setIsLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch {\n      setHasError(true);\n    }\n\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    loadPeople();\n  }, [loadPeople]);\n\n  const preparedPeople: Person[] = useMemo(() => people.map((person) => ({\n    ...person,\n    mother: findParent(people, person.motherName),\n    father: findParent(people, person.fatherName),\n  })), [people]);\n\n  if (isLoading) {\n    return (<Loader />);\n  }\n\n  if (hasError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  if (people.length === 0) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <PeopleTable people={preparedPeople} />\n  );\n};\n","import { PeopleLoader } from '../PeopleLoader';\n\nexport const PeoplePage = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">People Page</h1>\n\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <PeopleLoader />\n      </div>\n    </div>\n  </div>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { NavigationLink } from './components/NavigationLink';\nimport { PageNotFound } from './components/PageNotFound';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavigationLink to=\"/\" title=\"Home\" />\n\n            <NavigationLink to=\"/people\" title=\"People\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n\n            <Route path=\"/people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":personSlug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route\n              path=\"*\"\n              element={<PageNotFound />}\n            />\n\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}